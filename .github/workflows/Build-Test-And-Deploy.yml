name: Build, Test, and Deploy EssentialCSharp.Web

on:
  push:
    branches: [ "main" ]
  pull_request_target:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json
          source-url: https://pkgs.dev.azure.com/intelliTect/_packaging/EssentialCSharp/nuget/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.AZURE_DEVOPS_PAT}}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        id: nuget-cache
        with:
          path: |
            ~/.nuget/packages
            ${{ github.workspace }}/**/obj/project.assets.json
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
            ${{ runner.os }}-nuget-
          
      - name: Restore with dotnet
        run: dotnet restore
          
      - name: Build with dotnet
        run: dotnet build --configuration Release --no-restore
        
      - name: Run .NET Tests
        run: dotnet test --no-build --configuration Release

      - name: Set up Docker Buildx
        if: github.event_name != 'pull_request_target'
        uses: docker/setup-buildx-action@v3

      - name: Log in to container registry
        if: github.event_name != 'pull_request_target'
        uses: docker/login-action@v3
        with:
          registry: essentialcsharpregistry.azurecr.io
          username: ${{ secrets.ESSENTIALCSHARPPROD_REGISTRY_USERNAME }}
          password: ${{ secrets.ESSENTIALCSHARPPROD_REGISTRY_PASSWORD }}

      - name: Build and push container image to registry
        if: github.event_name != 'pull_request_target'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: essentialcsharpregistry.azurecr.io/essentialcsharp:${{ github.sha }},essentialcsharpregistry.azurecr.io/essentialcsharp:latest
          file: ./EssentialCSharp.Web/Dockerfile
          context: .
          secrets: |
            "nuget_auth_token=${{secrets.AZURE_DEVOPS_PAT}}"

  deploy-development:
    if: github.event_name != 'pull_request_target'
    runs-on: ubuntu-latest
    needs: build-and-test
    environment:
      name: 'Development'

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.ESSENTIALCSHARPDEV_AZURE_CREDENTIALS }}

      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n essentialcsharpdev -g EssentialCSharp --server essentialcsharpregistry.azurecr.io --username  ${{ secrets.ESSENTIALCSHARPDEV_REGISTRY_USERNAME }} --password ${{ secrets.ESSENTIALCSHARPDEV_REGISTRY_PASSWORD }}
            az containerapp update -n essentialcsharpdev -g EssentialCSharp --image essentialcsharpregistry.azurecr.io/essentialcsharp:latest
          
  deploy-production:
    if: github.event_name != 'pull_request_target'
    runs-on: ubuntu-latest
    needs: [deploy-development]
    environment:
      name: 'Production'

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.ESSENTIALCSHARPPROD_AZURE_CREDENTIALS }}

      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n essentialcsharpprod -g EssentialCSharp --server essentialcsharpregistry.azurecr.io --username  ${{ secrets.ESSENTIALCSHARPPROD_REGISTRY_USERNAME }} --password ${{ secrets.ESSENTIALCSHARPPROD_REGISTRY_PASSWORD }}
            az containerapp update -n essentialcsharpprod -g EssentialCSharp --image essentialcsharpregistry.azurecr.io/essentialcsharp:${{ github.sha }}
