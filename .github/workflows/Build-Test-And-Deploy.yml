name: Build, Test, and Deploy EssentialCSharp

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json
          source-url: https://pkgs.dev.azure.com/intelliTect/_packaging/EssentialCSharp/nuget/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.AZURE_DEVOPS_PAT}}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        id: nuget-cache
        with:
          path: |
            ~/.nuget/packages
            ${{ github.workspace }}/**/obj/project.assets.json
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
            ${{ runner.os }}-nuget-
          
      - name: Restore with dotnet
        run: dotnet restore
          
      - name: Build with dotnet
        run: dotnet build --configuration Release --no-restore
        
      - name: Run .NET Tests
        run: dotnet test --no-build --configuration Release

      - name: dotnet publish
        if: github.event_name != 'pull_request'
        run: dotnet publish -c Release -p:PublishDir=${{github.workspace}}/DeployEssentialCSharp.Web

      - name: Upload artifact for deployment job
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{github.workspace}}/DeployEssentialCSharp.Web
          
  automerge:
    needs: [build-and-test]
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      contents: write

    steps:
      - uses: fastify/github-action-merge-dependabot@v3.6.0  

  deploy-development:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build-and-test
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: EssentialCSharpDev
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_DEVELOPMENT_PUBLISH_PROFILE }}
          package: .
