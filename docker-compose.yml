version: '3.8'

services:
  # Main web application
  essentialcsharp-web:
    build:
      context: .
      dockerfile: EssentialCSharp.Web/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__PostgresVectorStore=${POSTGRES_CONNECTION_STRING:-Host=postgres;Database=essentialcsharp;Username=postgres;Password=password}
      - TypesenseOptions__Host=typesense
      - TypesenseOptions__Port=8108
      - TypesenseOptions__Protocol=http
      - TypesenseOptions__ApiKey=${TYPESENSE_API_KEY:-xyz}
    depends_on:
      - typesense
      - postgres
    networks:
      - essentialcsharp-network

  # Typesense search engine
  typesense:
    image: typesense/typesense:0.25.2
    restart: on-failure
    ports:
      - "8108:8108"
    volumes:
      - typesense-data:/data
    command: '--data-dir /data --api-key=${TYPESENSE_API_KEY:-xyz} --enable-cors'
    networks:
      - essentialcsharp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8108/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL for vector database (existing)
  postgres:
    image: pgvector/pgvector:pg16
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=essentialcsharp
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - essentialcsharp-network

volumes:
  typesense-data:
  postgres-data:

networks:
  essentialcsharp-network:
    driver: bridge